######################################################
# Calculatrice
######################################################
# - G√©rer les op√©rations simples : + - * /
# - Demander √† l'utilisateur un premier nombre
# - Boucler
# - L'utilisateur va introduire un op√©rateur puis un nombre
# - Le r√©sultat contient la valeur du calcul
# - calcul (str) qui va enregistrer toutes les op√©rations
# - afficher le r√©sultat si l'utilisateur entre le "="
#
# resultat = resultat + 1
# resultat = resultat + 1
# resultat = resultat + 1
# resultat = resultat + 1
# resultat = resultat + 1
# resultat = resultat + 1

######################################################

from fonctions import *

setDebug(False)
print("Calculatrice")
print("------------")
print("‚ÑπÔ∏è Instruction:")
print("‚ñ´Ô∏èEntrez un nombre et puis une op√©ration, le calcul est affich√© au fur et √† mesure")
print("‚ñ´Ô∏èEntrez = pour terminer le calcul")
print("------------")
#
# Initialisation
#
strResultat=""
intResultat = 0
operator = ""
finDeCalcul = False

nombre = getEntier()

while not finDeCalcul:
    debug(f"Nombre saisi : {nombre}")
    operator = getOperator()
    if (operator == "="):
        finDeCalcul = True
    else:
        # cas: d√©j√† un calcul effectu√©
        match operator:
            case "+":
                debug(f"+ Addition de {nombre} √† {intResultat}")
                intResultat += nombre
            case "-":
                debug(f"+ Soustraction de {nombre} √† {intResultat}")
                intResultat -= nombre
            case "*":
                debug(f"+ Multiplication de {intResultat} par {nombre} ")
                intResultat *= nombre
            case "/":
                debug(f"+ Division de {intResultat} par {nombre}")
                intResultat /= nombre
        #
        # Afficher le r√©sultat interm√©diaire
        #
        #if (strResultat == ""):
        #    strResultat = f"{nombre}"
        #else:
        strResultat += f"{nombre}" + operator
        print(f"üßÆ {strResultat}")
        #
        # Lire le nombre suivant
        #
        nombre = getEntier()
        debug("-------")
else:
    # afficher le r√©sultat final
    #strResultat +=  f"{nombre}" + operator
    print(f"üü∞ {strResultat} = {intResultat}")
######################################################